<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Web_Security</title>
    <link>https://aiguamumu.github.io/post.html</link>
    <description>Recent content in Articles on Web_Security</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 29 Oct 2022 12:00:00 -0500</lastBuildDate><atom:link href="https://aiguamumu.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL实操</title>
      <link>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/MySQL%E5%AE%9E%E6%93%8D.html</link>
      <pubDate>Sun, 18 Dec 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/MySQL%E5%AE%9E%E6%93%8D.html</guid>
      <description>导读 本来没想实操的，但是由于在学SQL注入的时候遇见了很多问题，不理解那样的SQL语句的执行会产生什么结果。一开始花费了很多时间上网查，查到最后发现还是自己创建一个库写一遍比较方便。
安装MySQL 记住软件安装目录和数据保存目录 记下账户和密码，都是root 记下设置的MySQL名字：MySQL57 配置环境变量 原因：本来只有在安装目录下启动MySQL.exe文件才能有效，但是配置了环境变量后，可以直接在cmd中执行mysql就可运行启动。 环境变量也可看做是全局变量 几个重要安装目录 DATA目录下
存放错误日志文件
存放三个目录（系统默认的数据库）
information_schema
mysql
performance_schema
sys
自定义每创建一个数据库，都会在data目录下生成一个文件夹
.FRM后缀，存放表的结构信息 .MYD后缀，存放数据信息 总览的几个目录
数据库系统管理软件安装目录
“database manage server”
数据库存放目录
“Data目录”
数据库链接目录
“connector/J”（java链接mysql需要的安装包）
客户端工具目录
“workhench”（mysql客户端管理工具）
忘记MySQL登录密码 设置无需密码登录 执行语句，–skip-grant-tables 会让 MySQL 服务器跳过验证步骤，允许所有用户以匿名的方式，无需做密码验证就可以直接登录 MySQL 服务器，并且拥有所有的操作权限。
mysqld --console --skip-grant-tables --shared-memory 接着不关闭当前的cmd，重新打开一个powershell，直接输入命令mysql就可进入到mysql中
坑：Can‘t change dir to报错 根本原因值下面的配置与电脑上的实际配置不一致问题。（或者说缺少data文件问题）
My.ini文件夹中此处配置改为以下，同时为了路径一致我们在那个文件夹下新建了一个data文件
进入MySQL 坑：提示系统访问权限不够
未使用管理员权限打开。
开启MySQL和关闭MySQL net start MySQL57 net stop MySQL57 MySQL57是通过电脑-服务-所查到的本机安装的MySQL的名字
链接MySQL mysql -hlocalhost -uroot -proot -h为服务器名，这里指本地服务区
-u为数据库的用户名，默认root
-p为密码
SQL注入在MySQL中的真实查询结果 example student库里的stu表格</description>
    </item>
    
    <item>
      <title>SQL注入</title>
      <link>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/SQL%E6%B3%A8%E5%85%A5.html</link>
      <pubDate>Sun, 18 Dec 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/SQL%E6%B3%A8%E5%85%A5.html</guid>
      <description>前言 第二遍学SQL注入了，第一遍学的云里雾里，不知道很多做法的根本原理，所以写下这一篇，弥补之前学的不足，并且回顾之前学的知识。
更深的SQL语句逻辑理解和实操结果见笔记“MySQL实操”
本篇以MySQL数据库为例。（当然实战中会遇见Oracle或者SQL-server，见文章刷题版）
大多数SQL注入如何检测：除了下面所提到的手工方法，实战中我们一般用Burp suite的Web漏洞扫描程序来快速找到。
不同的SQL注入部分：大部分注入点都在SELECT...WHERE...后面的语句中，但也有在UPDATE...WHERE或者INSERT或者SELECT 列或者SELECT ORDER BY
版本 MySQL 5.0以后 有information_schema关键字，可以直接查表、查库。 为多用户模式 原理 SQL注入的本质：是字符串的拼接。让用户写入的东西插入到web表单提交或输入域名或页面请求的查询字符串，使服务器误以为是SQL语句而去执行。
举个例子 在这个注入点中，后台的封装的SQL语句时这样的：
“SELECT password FROM student WHERE name=&amp;rsquo; ” + 用户要输入的语句 (一个变量)+&amp;quot; &amp;rsquo; &amp;lsquo;&amp;quot;
所以我们输入的语句，默认查的表是它给的student表，所以需要不全列用null补上，null也可以爆出列的数量
1&amp;rsquo; union select null,null,null&amp;ndash;
除非后面利用union+保留字爆出库名表名列名后，在不同的表查询数据，则不用NULL
步骤 判断注入点是否可注，且判断sql注入的类型 有回显型：
字符注入+联合/堆叠注入 数字注入+联合/堆叠注入 无回显型（盲注）：
布尔盲注
报错盲注
延时盲注
先考虑语句错误（正误都200但有welcom，正误为200和500），最后再考虑语法错误
如果是有回显型 万能密码/数字型注入（选取哪个看这个网页对哪个有反应）
目的：爆出默认当前表中的隐藏数据、绕过登录界面的密码。
看个大概，能爆出多少数据。
从原理上来说，爆出的应该是这个注入点开发者写的代码中的where=注入内容的东西。
用联合注入去查默认当前表
目的：为了查找本表之外的其他表的信息
误区：
其实联合注入不光可以与其他表联合求并，也可以与自身联合求并，下面求证：
有两种基本情况，其中需要使用组合查询： 1.在单个查询中从不同的表中返回类似结构的数据。 2.对单个表执行从相同的表自身联合查询，多用于确定列数/查询所在表的更多信息。 **而其实自身联合查询出的结果可以等同于有多个WHERE子句查询出的结果。**微小区别是，对于太过复杂的查询用UNION可能比用WHERE更好。
方法：见下。
查询真实结果：见笔记“MySQL实操”
用联合/堆叠注入去查其他表
方法一：联合注入。
首先，UNION注入的前提：
查找当前默认表中的，列的数量（直接ORDER BY/UNION+NULL占位/UNION+select 1,2,3,4#）
union查询中，union前后两张表的，列的数量要相同
查找有用的列（一般在注入中有用的都是字符串形式的列）UNION+‘A’+NULL。</description>
    </item>
    
    <item>
      <title>SQL注入-刷题A</title>
      <link>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/SQL%E6%B3%A8%E5%85%A5-%E5%88%B7%E9%A2%98A.html</link>
      <pubDate>Sun, 18 Dec 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/SQL%E6%B3%A8%E5%85%A5-%E5%88%B7%E9%A2%98A.html</guid>
      <description>针对不同数据库的备忘录可在链接中找。
大体分类：
T0~T1 字符/数字型注入
T2~T5 union注入
T6~T10 数据库的版本问题+union注入和数据库本身保留字
T11~T13盲注
T14带外
T0允许检索隐藏数据的注入 知道注入点以后，判断属于字符型注入还是数字型注入
whatever&amp;#39; or 1=1-- url中用加号链接，加号就代表空格
https://insecure-website.com/products?category=Gifts&amp;#39;+OR+1=1-- T1允许绕过登录的注入 已知我需要拿用户名administrator登录
administrator&amp;#39;-- UNION从其他表中检索数据 T2测试列数 &amp;#39; UNION SELECT NULL-- &amp;#39; UNION SELECT NULL,NULL-- &amp;#39; UNION SELECT NULL,NULL,NULL-- 或者 &amp;#39; ORDER BY 1-- &amp;#39; ORDER BY 2-- &amp;#39; ORDER BY 3-- T3查找具有有用数据类型的列 通常对我们有用的数据类型都是字符串的形式。
Accessories&amp;#39; UNION SELECT &amp;#39;nEsVgZ&amp;#39;,NULL,NULL-- Accessories&amp;#39; UNION SELECT NULL,&amp;#39;nEsVgZ&amp;#39;,NULL-- Accessories&amp;#39; UNION SELECT NULL,NULL,&amp;#39;nEsVgZ&amp;#39;-- 用第二行测试的时候能返回出数据，说明字符串变量在中间。
T4union攻击检索相关数据 Accessories&amp;#39; union select username,password from users-- 获取其他有用的表名以及某些列名在 SQL 注入攻击中检查数据库 |网络安全学院 (portswigger.</description>
    </item>
    
    <item>
      <title>SSH认识和配置</title>
      <link>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/SSH%E8%AE%A4%E8%AF%86%E5%92%8C%E9%85%8D%E7%BD%AE.html</link>
      <pubDate>Sun, 18 Dec 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/SSH%E8%AE%A4%E8%AF%86%E5%92%8C%E9%85%8D%E7%BD%AE.html</guid>
      <description>导读 最初接触ssh是在登录github远程仓库时，知道除了https还有ssh方法（ssh的建立安全隧道的作用）；然后再次接触到ssh是因为在看见switchomega插件的时候想去了解代理和翻墙的原理，知道了也可以用ssh进行（ssh的绕过防火墙的作用）。
以上提到的都是ssh的作用，既然要学作用，干脆把ssh系统性的都学了一遍。
SSH-是什么 Secure Shell，一种用于加密两台计算机之间通信并支持各种身份验证机制的网络协议。、
实现途径：把明文的网络协议套用在它里面 架构：采取S/C（Server/client），即服务器/客户端模式 SSH-作用概览 用途 建立加密隧道。
登录服务器 端口转发（port forwarding）。 概述 专为远程登录会话和两台电脑之间通过安全的链接进行数据交换的网络协议。
ssh客户端(ssh) ssh服务端(sshd) +----------+ +---------+ | | | | | | | | | | | | | | | | +---+---+--+ +-+---+---+ | | | | | | | | | +----------------------------+ | | | | ssh加密了的TCP通信 | +------------------------------------+ SSH连接 有效防止IP欺骗和DNS欺骗 所做准备 OpenSSH：（服务端）
提供加密通话的计算机程序。（SSH只是一个协议，而OpenSSH是其开源实现）
作为服务端（sshd）需要安装OpenSSH
客户端（ssh）：
Linux系统：
直接使用SSH命令
Windows
Putty/Putty Tray Bitvise（免费） Xshell（被爆后门多） Cmder（集成 Git For Windows、Unix命令等，通过ssh agent来配置） 登录远程服务器作用 密码登录远程服务器 基本密码登录的客户端和服务端配置操作</description>
    </item>
    
    <item>
      <title>webshell导读</title>
      <link>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/webshell%E5%AF%BC%E8%AF%BB.html</link>
      <pubDate>Sun, 18 Dec 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/SQL%E6%B3%A8%E5%85%A5/webshell%E5%AF%BC%E8%AF%BB.html</guid>
      <description>Tomcat架构 问题提出 一台电脑只有一个IP，都用8080端口，为什么能挂两个网站？ 请求消息中所包含的主机名被连接器给识别出来，并且放到了Request对象里面。
引擎通过Request对象里面的目标主机名，将Request对象派发给相应的主机来处理，因此一台电脑能部署多个网站。
如何使浏览器访问主机名时访问本机的IP地址？ 在C:\Windows\System32\drivers\etc下的hosts文件的末尾增添“IP地址 域名”的条目，就可以在本地进行该域名解析。
即可以使对相同的ip地址和相同端口的访问，却可以实现访问不同的虚拟主机
重点-server.xml文件 在config文件夹下
说明：
树形结构，XML语言 每个标签对应下图中的每个容器 核心架构 说明：
一个虚拟主机对应tomcat下的一个文件夹
上图中所有的方框都是容器
连接器（Connector）负责通信，注册时需要指定监听端口和通信协议，通信协议的指定是为了传输信息的完整和准确性。
连接器的功能：
引擎（Engine）负责处理请求。
总结 通过这些容器，电脑上的Servlet被进行了详细的分类管理。
连接器给出的request（请求对象）里面，包含了他要访问的servlet的详细路径，具体地说就是主机名、应用名（路径）和servlet名（路径），因此各级容器收到了对象之后，就能够把它正确的派发给下一级容器，最后达到目标servlet对象。
这个request对象的层层转发过程，本质上是函数的层层调用过程。
调用完成之后，连接器将得到一个response对象，连接器将response对象转换为字节流返回给浏览器，这就是Tomcat的核心架构和工作原理。
参考文章 Tomcat的目录结构
https://www.bilibili.com/read/cv13861154
JavaWeb开发必看！Tomcat架构及工作原理（8分钟）_哔哩哔哩_bilibili
监听端口 HTTP协议 ：默认80端口
HTTPS协议：默认443端口
端口：
（作用回顾）：像“门”，每个端口对应一个上层的应用程序，这个上层应用程序（进程）可以监听这个端口
监听
即这个应用程序监听这个端口来的数据
查看监听端口命令
netstat -ano | find /i &amp;#34;listen&amp;#34; 特殊IP地址回顾：
0.0.0.0 表示本机的所有地址 127.0.0.1 表示本机的环回地址 实例（以python创建socket对象并绑定一个端口去监听一个IP地址）
python书写
找“12345”这个端口，并用pid查找监听某个端口的进程是谁
关闭端口直接结束进程就可以了
Socket模块（python） “套接字”。针对某个服务端和客户端来进行打开、读写、关闭
参考文章 [python中的socket是什么意思？如何使用 - Jaoany - 博客园 (cnblogs.com)](https://www.cnblogs.com/fanglijiao/p/15060004.html#:~:text=python中的socket是什么意思？如何使用呢 Socket,一、概述 socket通常也称作&amp;quot;套接字&amp;quot;，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过&amp;quot;套接字&amp;quot;向网络发出请求或者应答网络请求。)
XML 独立于软件和硬件的信息传输工具
可扩展标记语言，一种很像html的语言
目的：传输数据。（而不是显示数据） XML不会做任何事情，仅仅只是包装一段纯粹的信息 自我描述性。XML没有预定义好的标签，所有的标签都是创作者自己定义的 xml与html关系 xml是对html的补充，并不会替代html</description>
    </item>
    
    <item>
      <title>Git&amp;Github笔记</title>
      <link>https://aiguamumu.github.io/post/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/github%E7%AC%94%E8%AE%B0.html</link>
      <pubDate>Sat, 05 Nov 2022 14:55:49 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/github%E7%AC%94%E8%AE%B0.html</guid>
      <description>将本地项目推送到Repo 在本项目的根目录下建立git仓库
git init 将项目中的所有文件添加到管道
git add . 将管道中的文件提交到仓库
git commit -m “注释语句” 去github网站中创建一个repo
复制clone or download下SSH的地址，前提是在本地已经建立了SSH密钥和公钥
将本地仓库关联到github上
git remote add origin git@github.com:xxx/xxx.git 要先pull一下，获取当前github上的repo的他人的更新。（如果是刚建的仓库可有可无）
git pull origin master 上传代码push
git push -u origin master 分支 分支功能存在于，当我们的开发过程中接到一个或两个新的（不同的）功能需求时，我们需要同时开发这几个分支，最后可以merge到主分支上。
github仓库中有一个默认的master分支 当然可以直接在github网页的仓库中创建一个新的分支，但其实在本地通过git here创建分支后再push上去会更加的方便 查看目前的分支
git branch 创建一个新的分支
git branch 新的分支名字 切换分支
git checkout 要切换到的分支名字 合并分支
git branch 要合并的分支名字 #此时位置处于另一个被合并的分支下 #或者 git merge gh-pages --allow-unrelated-histories </description>
    </item>
    
    <item>
      <title>CMS登录操作和cookie&amp;session的使用</title>
      <link>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/05CMS%E7%99%BB%E5%BD%95%E6%93%8D%E4%BD%9C%E5%92%8Ccookiesession%E7%9A%84%E4%BD%BF%E7%94%A8.html</link>
      <pubDate>Sun, 30 Oct 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/05CMS%E7%99%BB%E5%BD%95%E6%93%8D%E4%BD%9C%E5%92%8Ccookiesession%E7%9A%84%E4%BD%BF%E7%94%A8.html</guid>
      <description>PHP基础 php基本语法F 基本HTML之meta标签
组成：
http-equiv属性
目的：相当于http文件头的作用。
参数有：
Expires（期限）、Pragma（让访问者无法脱机访问）、Refresh（刷新）、Set-Cookie（cookie设定，例如如果网页过期，cookie将删除）、Window-target（窗口显示设定）、content-Type（显示字符集设定）
content属性（即http-equiv属性的值） name属性
目的：告诉搜索引擎关于这个网站的信息的名字
参数有：Keywords（关键字）、description（对网站内容的描述）、robots（机器人向导，用来告诉机器人哪些需要索引哪些不需要）、author（作者）、generator（信息参数，网站用什么软件制作的）、COPYRIGHT（版权信息）、revist-afte（网站重访）
content属性（即name属性的值）
目的：便于搜索引擎机器人查找信息和分类信息用
参数有：
robots中：
all（文件将被检索，页面中的链接可被查询）、none（文件不被检索，页面中的链接不可被查询）、index（文件将被检索）、follow、noindex、nofloow。
作用：
SEO（搜索引擎优化）、定义页面使用的编码、自动刷新并指向新的页面、实现网页转换的动态效果、控制页面缓冲、网页定级评价、控制网页显示的窗口
HTTP协议 一种超文本传输协议 无状态跟踪协议（老年痴呆型） 当你访问了服务器后，关闭网页，再次访问服务器，服务器不会意识到是你在访问（记不住人） 方法一：基本思路。如果客户端浏览器的应用程序需要和不支持cookie的服务器打交道，那么只能使用最原始的，用input标签读取用户输入到的信息，并传入php中，再与数据库中的用户名和密码做对比。（用户名和密码一般都会存储一份在服务器中） 方法二：实现不需要每次都输入用户名和密码。把用户名和密码存储到浏览器里，然后让每次HTTP请求都自动带数据给服务器。这个技术我们称为cookie。（存储用户信息的凭证） 方法三：比cookie更安全的方法，会话Session，即把Session-ID加入到cookie中，而Session-ID对用户名和密码做了加密，并存储在服务器中。 Cookie 是什么 cookie的工作原理：（即带着一张储存访问信息的卡片，只要set-cookie后，每一次请求都要带着）
cookie都是存储在客户端的。
即客户端可以查看cookie
客户端也可以禁止cookie
禁止后，如果有些网站是需要拿cookie登录的（即cookie中存储用户名和密码），则登录不进去了 通过PHP可以创建并取回cookie
功能
cookie解决的是http超文本链接协议属于无状态协议的问题 无状态协议：当你访问了服务器后，关闭网页，再次访问服务器，服务器不会意识到是你在访问 cookie可以存储用户名、密码、登录有效时长 弊端
不安全。因为直接存储在客户端，所以依赖于客户端，所以如果你的客户端浏览器被黑了，那么所有存在cookie中的密码用户名将会泄露。改进：会话Session 使用方法 核心：setcookie()函数
添加cookie值
setcookie(&amp;#39;下标&amp;#39;,&amp;#39;值&amp;#39;,&amp;#39;有效时间&amp;#39;,&amp;#39;有效作用域&amp;#39;) 第四个值如果是/表示当前作用域下可以用
修改cookie值
setcookie(&amp;#39;下标&amp;#39;,&amp;#39;新值&amp;#39;,&amp;#39;有效时间&amp;#39;,&amp;#39;有效作用域&amp;#39;) 删除cookie值
setcookie(&amp;#39;下标&amp;#39;,null,&amp;#39;有效时间&amp;#39;,&amp;#39;有效作用域&amp;#39;) 查看cookie值
依赖系统所提供的$_COOKIE预定义数组变量，所有的对cookie设置的值都会成为该数组变量的一个元素。例如使用特定的COOKIE的值$_COOKEI[&#39;下标&#39;] 查看用var_dump()和print_r()，但无法在添加/删除/修改的当前页面查看COOKIE值。 $_COOKIE()数组
一个预定义数组变量 一个可以跨页面的变量 代码流程 在html页面中，写从用户获取用户名和密码的语句，利用form表单和post传值进一个php文件进行处理。
创建cookie，在那个php文件里写处理传进来的值的操作，操作用setcookie()数组
**登录（验证特定的cookie信息是否存在）**后的界面书写，一个php里：
**退出登录（清除cookie信息）**操作，一个php里
Session 是什么 工作原理
Session_ID会存在cookie里
Session_ID是一个经过服务器对原始的用户名和密码，加密后的一串数字，所以只有服务器存储了原始用户名和密码
Session_ID服务器会存一份，客户端会存一份包含了Session_ID的cookie
每一次会话的请求，客户端都会带着含有Session_ID的cookie向服务器发送请求
所以如果在客户端浏览器中关闭cookie服务将登录不了
如果黑客修改了Session_ID，服务器就将识别不了
使用方法 session_start()开启session会话</description>
    </item>
    
    <item>
      <title>CMS架构和前后台关联-进阶B</title>
      <link>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/04CMS%E6%9E%B6%E6%9E%84%E5%92%8C%E5%89%8D%E5%90%8E%E5%8F%B0%E5%85%B3%E8%81%94B-%E8%BF%9B%E9%98%B6.html</link>
      <pubDate>Mon, 24 Oct 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/04CMS%E6%9E%B6%E6%9E%84%E5%92%8C%E5%89%8D%E5%90%8E%E5%8F%B0%E5%85%B3%E8%81%94B-%E8%BF%9B%E9%98%B6.html</guid>
      <description>代码逻辑3	代码逻辑4	代码逻辑5
cms架构B（PHP+html+mysql的model） PHP基本语法E 两种在HTNL中写php的写法：
&amp;lt;?=变量名?&amp;gt;&amp;lt;?phppass;?&amp;gt; empty(x)函数。x为空或x为0，结果都返回true（注意这里有个坑）
emplode(用什么分割，数组)函数，用来分割数组中的每一个元素。
count()返回数组中元素的个数。
用新的数组前，需要定义它
$shuzuming=array()
- `isset(x)`函数，如果x的变量存在，返回true。否则返回false。一般判断语句为 如果变量x设置了且不为空。- `is_mumeric()`检测一个变量是否为数字或者数字字符串。有的时候用empty()函数不理想会考虑能否用此函数。- `strtotime() `函数将任何英文文本的日期或时间描述解析为 Unix 时间戳- `time()`获取当前时间戳函数- `md5()` 把从前台用户输入获得的密码在php中（control.php中）进行md5的加密，再存进数据库中- `count()`计算数组中单元数目，或者对象中属性个数- `header()`函数向客户端发送一个http报头，用来告知客户端信息，也可用于跳转：![image-20221016215805247](images/image-20221016215805247.png)- 自己定义的函数`success(path&amp;#39;?m=&amp;#39;，[str])`若成功则跳转的路径`error((path&amp;#39;&amp;#39;，[str])`若失败则跳转的路径- `ceil(x)`向上取一个最近的整数（大于x的）- 如果要在同级函数中调用另一个同级函数的变量，可以把那个要调用的函数声明为全局函数，或者使用闭合函数的写法。- **HTML**语法：&amp;gt; - `form`里的`input`标签的属性有：&amp;gt;&amp;gt; ![image-20221022172741241](images/image-20221022172741241.png)&amp;gt;&amp;gt; - `hidden`属性：一般用来传值而不被用户看到。&amp;gt;&amp;gt; - `select`标签&amp;gt;&amp;gt; 单选或多选菜单，里面有`option`标签,其中&amp;gt;&amp;gt; - `value`属性，这个option如果被选了，那么如果整个select封装成表单提交的话，传出的`$_POST`或者`$_GET`**数组的值就是这个value**&amp;gt; - `checked`加了一个checked属性，可把此复选框/下拉栏设为选中状态。[详情](#checked)&amp;gt;&amp;gt; - `span`行级别，不自动换行。把标签中间的文字给一个特定的样式&amp;gt;&amp;gt; 等同于HTML5的`font`标签。&amp;gt;&amp;gt; - `div`块级别，自动换行。把这一块的东西给一个特定的样式&amp;gt;&amp;gt; - `script`标签里有`alert`弹框弹出，`location`属性表示跳转的位置。&amp;gt;&amp;gt; - `li`标签（表示单元格）可以在有序列表`ol`里，也可以在无序列表`ul`里&amp;gt;&amp;gt; !</description>
    </item>
    
    <item>
      <title>PHP链接MySQL</title>
      <link>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/03PHP%E9%93%BE%E6%8E%A5SQL%E4%B8%8E%E6%9E%B6%E6%9E%84%E7%8B%AC%E7%AB%8B.html</link>
      <pubDate>Sat, 15 Oct 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/03PHP%E9%93%BE%E6%8E%A5SQL%E4%B8%8E%E6%9E%B6%E6%9E%84%E7%8B%AC%E7%AB%8B.html</guid>
      <description>代码逻辑
用PHP链接Mysql执行操作 MySQLI 可直接安装wamp，代表Windows、Apache、MySQL和PHP。这是一个软件堆栈。
mysqli的扩展安装之后才可用php链接mysql
&amp;lt;?php phpinfo(); ?&amp;gt; phpinfo()函数可以显示出PHP 所有相关信息。是排查php是否出错或漏配置模块的主要方式之一
php基本语法D @ 错误控制操作符，当表达式加上@时，若该表达式错误，所产生的错误信息不会被爆出来，表达式生成的错误信息将保存在变量$ php_errormsg里，每个错误都会覆盖此变量
&#39;{php变量}&#39;把变量用花括号括起来，并且用单引号包起来，表示把这个变量解析成字符串的形式,这样才能加入到sql语句里
php文件里可以写html标签,echo &#39;html标签&#39;;
html中写sql语句需要&amp;lt;php? 变量名?&amp;gt;
php排错时要从sql语句开始排错。
$sql=&amp;#34;&amp;#34;; echo $sql;exit; 然后把显示的sql语句赋值粘贴进mysql执行，看成不成功。
die(message)在退出脚本前显示message信息
php中，用.来实现字符串和变量的链接
&amp;#34;它的密码是&amp;#34;.$key.&amp;#34;值&amp;#34; PHP中反引号的作用
执行系统命令
echo ipconfig；
内涵SQL语句的关键字时
$sql = &amp;ldquo;select user,username from Content&amp;rdquo;;
匿名函数（闭包函数）
实现php闭包既可以读取函数内部的变量，同时还可以将变量始终保存在内存中，使得即使函数执行完毕，变量也将一直存在。
子函数可以使用父函数中的局部变量
PHP中array（）
只写array()说明新建了一个新的数组，php里有索引数组、关联数组、多维数组。
使用PHP进行数据库插入操作 PHP中写sql语句，要把sql语句用双引号括起来并写入一个变量里
mysqli_connect(&#39;数据库所在地址&#39;，’用户名‘，’密码‘，’数据库名‘)&amp;ndash;&amp;gt;数据链接函数
$link=函数1 or die（）来判断函数1的执行是否有错，有错则会爆出所有信息。加@不爆出。&amp;ndash;&amp;gt;出错怎么办
mysqli_query（链接的数据库赋给的变量，sql语句的变量），发送一条SQL语句到数据库服务器。
insert插入返回布尔值，执行成功为true，失败为false&amp;ndash;&amp;gt;发送sql语句函数
mysqli_affected_rows(链接的数据库赋给的变量)&amp;ndash;&amp;gt;获取数据影响行函数
mysqli_insert_id(链接的数据库赋给的变量)，返回的是添加的哪一行的id
mysqli_close(链接的数据库赋给的变量)&amp;ndash;&amp;gt;关闭数据库
使用PHP进行数据库查询操作 mysqli_num_rows(问答函数出来的对象)，返回值是对象的行数
mysqli_query(链接的数据库的变量)，对于查询而言返回的是一个对象
mysqli_fetch_assoc(问答函数出来的对象)
获取一行作为关联数组返回。
如果数据库里什么都没有，就会返回NULL
使用PHP进行数据库修改 使用PHP进行数据库删除 把删除函数可以写到查询的那个文件（func.php）的表格里： delete.php中写入sql语句的传参也要改一下：
这里能用$_GET变量是因为我们发现，这个网页是以get方式传参的。
函数的封装（Model模块） 关联数据库的函数
增删改功能的函数：
这里有一个正则表达式，此函数是一个闭包函数，用来在这个函数里使用父函数的变量，注意格式变量=function(用户给的变量，这里是sql语句) use(传进来的父函数的变量)</description>
    </item>
    
    <item>
      <title>MySQL数据库</title>
      <link>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/02MySQL%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%E7%8B%AC%E7%AB%8B.html</link>
      <pubDate>Wed, 05 Oct 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/02MySQL%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%E7%8B%AC%E7%AB%8B.html</guid>
      <description>MySQL导论 MySQL是一个关系型数据库管理系统（RDBMS）,由Oracle企业支持，SQL是它的，开源免费。存储引擎多变，不支持查询取消。
sqlserver和mysql区别有哪些-mysql教程-PHP中文网
如何配置安装启动
phpMyadmin
phpMyAdmin是一个以PHP为基础,以Web-Base方式架构在网站主机上的MySQL的数据库管理工具,是免费的Web应用程序;为使用MySQL数据库管理系统提供了方便的GUI,让管理者可用Web接口管理MySQL数据库
访问：localhost/admin
CMD与MySQL 基础符号
登录mysql：mysql[-h 数据库服务器地址（如果存在本机可不写）-u 用户名 -p 密码吗]
退出mysql：\q
​	exit
​	quit
用完整格式查看 \G
命令执行符（一条语句的结束） ; 或者 \g
清除信息 \c
常见符号：-&amp;gt; 当前命令没有命令执行符。
​	&#39;&amp;gt; 前面写的SQL语句缺少单引号
编码规范 关键字和函数要全部大写
数据库名、表名、字段名 全部小写
必须以**;结尾**（命令执行符确认）
常见的中文字符集设置
需要设置utf8-mb4,否则将乱码
utf8	国际化标准，亚洲通用字符集，一个汉字占3个字节（1~4字节的编码）
GBK 中期标准，一个汉字占2个字节
GB2312 早期标准
数据库字符集的依赖关系（逐层查找）
内容字符集-&amp;gt;字段字符集-&amp;gt;表字符集-&amp;gt;库字符集
SQL语句 我们每输入一条命令，所跳出来的返回值很重要。命令要简洁，效率优先，能不麻烦就不麻烦。
分类
DDL 数据库定义语言（CREAT DROP SHOW ALTER）
DML 数据库操作语言（INSERT DELETE UPDATE)
DQL 数据库查询语言（SELECT WHERE）
DCL 数据库控制语言（权限）
系统默认数据库
最好不要动。
information_schema	保存列行表单对象信息
mysql	保存服务器运行信息</description>
    </item>
    
    <item>
      <title>CMS架构和后台配置A-初识</title>
      <link>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/01CMS%E6%9E%B6%E6%9E%84%E5%92%8C%E5%90%8E%E5%8F%B0%E9%85%8D%E7%BD%AEA-%E5%88%9D%E8%AF%86.html</link>
      <pubDate>Sat, 01 Oct 2022 17:35:33 +0800</pubDate>
      
      <guid>https://aiguamumu.github.io/post/PHP%E5%BC%80%E5%8F%91/01CMS%E6%9E%B6%E6%9E%84%E5%92%8C%E5%90%8E%E5%8F%B0%E9%85%8D%E7%BD%AEA-%E5%88%9D%E8%AF%86.html</guid>
      <description>代码逻辑 WEB工作原理架构 CMS系统架构 整个流程构架： 1.需求分析
​	CMS
​	后台：会员模块、分类模块、文章模块&amp;hellip;
​	前台：首页、列表页、文章列表、搜索、分页、注册、登录页&amp;hellip;.
2.数据库设计
​	1.找实体
​	2.为实体找属性
​	3.找关系
​	4.E-R图
3.程序设计
​	项目的目录结构（MVC设计模式）
​	一、EW-cms（主目录）
​	1.admin 网站后台目录（
​	layout-后台公共模板文件-header.html/left.html；
​	include-后台资源目录-css/js/img；
​
​	view-所有的目录user/type-index.html/index.php-访问后台的入口文件-所有后台函数的调用-所有路径的include的蛊王；；
​	control控制器目录
​	IndexControl.php显示后台主页文件-一些函数的具体编写/UserControl.php用户相	关操作/ORG扩展目录
​	）
​	2.web（home） 网站前台目录（
​	index.html 首页
​	layout 前台工作模板 header/footer
​	model模块（存放php与mysql相连的增删改查操作的函数封装）
​	view-每个页面都有单独的文件(index.php前台主入口文件)
​	control-每个页面相关的操作写入到对应的control文件中）
​	4.public 公共资源目录（图片上传和缩放/index.php 网站（项目）主入口文件）
​	5.config 网站的配置（数据库相关的操作、数据库的配置文件、数据的验证、上图中的model-设置网站配置常量）
5.项目测试
6.验收完工 项目正式上线
项目的以上在此下面两本书中会说明清楚：</description>
    </item>
    
  </channel>
</rss>
